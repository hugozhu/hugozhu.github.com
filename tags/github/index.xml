<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on All about Raspberry Pi</title><link>https://blog.hugozhu.site/tags/github/</link><description>Recent content in Github on All about Raspberry Pi</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 07 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.hugozhu.site/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog迁移到hugo模版引擎</title><link>https://blog.hugozhu.site/post/2024/77-migrate-from-gor-to-hugo/</link><pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.hugozhu.site/post/2024/77-migrate-from-gor-to-hugo/</guid><description>&lt;p>因为Blog的模版太老，不支持手机，花一点时间快速升级下，选用了hugo这个静态网站模板引擎。&lt;/p></description></item><item><title>使用Github合作开发项目</title><link>https://blog.hugozhu.site/post/2013/collaborating-development-with-github/</link><pubDate>Wed, 27 Feb 2013 00:00:00 +0000</pubDate><guid>https://blog.hugozhu.site/post/2013/collaborating-development-with-github/</guid><description>&lt;p>本文大部分内容来自： &lt;a href="https://help.github.com/categories/63/articles">https://help.github.com/categories/63/articles&lt;/a>&lt;/p>
&lt;p>Github上合作开发最好的方式是“&lt;strong>Fork + Pull Request&lt;/strong>”。比如我最近需要一个静态Blog生成器，市面上有很多Ruby实现的，但我想要一个Go语言的实现，Github上找到了一个 &lt;a href="https://github.com/wendal/gor">https://github.com/wendal/gor&lt;/a> ，测试了一下已有的功能基本能满足了，就用上了。&lt;/p>
&lt;p>但实际使用过程中发现了一个问题，如果在URL中有中文，生成的URL如下没有做URL安全编码：&lt;/p>
&lt;pre>&lt;code>http://hugozhu.myalert.info/2013/02/27/在Pi和Github上搭建自己的个人博客.html
&lt;/code>&lt;/pre>
&lt;p>还有一种情况是如果URL中有空格，如：&lt;/p>
&lt;pre>&lt;code>http://hugozhu.myalert.info//2013//02/25/Java properties to enviorment variables.html
&lt;/code>&lt;/pre>
&lt;p>浏览器遇到这种URL时，会主动进行编码，但这里有两个问题：&lt;/p>
&lt;ol>
&lt;li>遇到中文时，浏览器是用GBK还是UTF-8还是其它字符集编码后再发送给服务器呢？&lt;/li>
&lt;li>遇到空格时，编码成+还是%20呢？
不同浏览器实现可能不一样，在不同操作系统上也可能不一样（可能和用户设置的缺省语言有关），这样有些用户可能会遭遇404错误了，实际上我在服务器的错误日志上的确看到这样的错误&lt;/li>
&lt;/ol>
&lt;p>日志：&lt;/p>
&lt;pre>&lt;code>2013/02/27 20:41:33 [error] 7791#0: *3285 open() &amp;quot;.../2013/02/25/Java+properties+to+enviorment+variables.html&amp;quot; failed (2: No such file or directory), client: 221.179.193.78, server: hugozhu.myalert.info, request: &amp;quot;GET /2013/02/25/Java+properties+to+enviorment+variables.html HTTP/1.1&amp;quot;, host: &amp;quot;hugozhu.myalert.info&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>于是我需要动手修改代码：&lt;/p>
&lt;ol>
&lt;li>首先需要做的就是Fork一下原项目到自己的代码仓库： &lt;a href="https://github.com/hugozhu/gor">https://github.com/hugozhu/gor&lt;/a>&lt;/li>
&lt;li>修改好代码并提交到自己的仓库： &lt;a href="https://github.com/hugozhu/gor/commit/db2784623d9df4d0652436efdbfbb9caccdc1e1d">https://github.com/hugozhu/gor/commit/db2784623d9df4d0652436efdbfbb9caccdc1e1d&lt;/a>&lt;/li>
&lt;li>在你的代码仓库页面上点Pull Request:
&lt;img src="https://pbs.twimg.com/media/BEH7V0vCYAAMgcl.jpg:large"/>&lt;/li>
&lt;li>选择好你刚提交好的Commits，然后点发送;&lt;/li>
&lt;li>原项目的维护者就会收到这个Pull Request: &lt;a href="https://github.com/wendal/gor/pull/14">https://github.com/wendal/gor/pull/14&lt;/a>&lt;/li>
&lt;li>如果你提交的代码足够好，维护者可以合并到项目主干上；&lt;/li>
&lt;li>记住下一次本地修改代码前要先Merge一下原作者新提交的改动;&lt;/li>
&lt;/ol>
&lt;p>如下：&lt;/p>
&lt;pre>&lt;code>git remote add upstream https://github.com/wendal/gor
git fetch upstream
git checkout master
git merge upstream/master 
&lt;/code>&lt;/pre>
&lt;p>到此为止就完成了一次合作开发。&lt;/p></description></item><item><title>在Pi和Github上搭建自己的个人博客</title><link>https://blog.hugozhu.site/post/2013/how-to-host-personal-blog-on-github/</link><pubDate>Wed, 27 Feb 2013 00:00:00 +0000</pubDate><guid>https://blog.hugozhu.site/post/2013/how-to-host-personal-blog-on-github/</guid><description>&lt;h1 id="方法如下">方法如下：&lt;/h1>
&lt;p>本站同时托管在家里的&lt;a href="http://www.raspberrypi.org">Raspberry Pi&lt;/a>和&lt;a href="http://pages.github.com/">Github Pages&lt;/a>上，并同步保持更新，海外用户会访问Github，国内用户则会访问Pi，不同线路解析域名&lt;strong>hugozhu.myalert.info&lt;/strong>到不同的服务器是通过&lt;a href="http://dnspod.cn">DnsPod&lt;/a>的服务实现的，这么好的服务还是免费的，这里推荐一下。&lt;/p>
&lt;p>因为Github Pages只能支持静态网页，你需要一个能生成静态网页的博客生成引擎。我使用的是&lt;a href="http://github.com/wendal/gor">gor&lt;/a> ， 也可以使用&lt;a href="http://ruhoh.com">ruhoh&lt;/a>，&lt;a href="https://www.google.com/search?q=static+blog+generator&amp;amp;hl=en&amp;amp;newwindow=1&amp;amp;client=safari&amp;amp;rls=en&amp;amp;biw=1238&amp;amp;bih=868&amp;amp;ei=msAuUY-vDMKO2AWQ7IHoBQ&amp;amp;sqi=2&amp;amp;start=10&amp;amp;sa=N">Google一下还有很多&lt;/a>。&lt;/p>
&lt;h2 id="静态页面博客的好处">静态页面博客的好处：&lt;/h2>
&lt;ol>
&lt;li>性能是最好的，很合适用Raspberry Pi来做服务器，节省资源；&lt;/li>
&lt;li>文章可以用Markdown格式来编写，采用Github来做版本控制，我的Blog仓库在 &lt;a href="http://github.com/hugozhu/blog">http://github.com/hugozhu/blog&lt;/a> ，数据安全很好，误删除也不担心了；&lt;/li>
&lt;li>很容易找到托管环境，方便迁移；&lt;/li>
&lt;li>用Gor在Pi上生成速度很快；再用Nginx提供Web服务，可以直接在Pi上写Blog；&lt;/li>
&lt;li>大繁至简&lt;/li>
&lt;/ol>
&lt;h2 id="github设置">Github设置&lt;/h2>
&lt;ol>
&lt;li>在你的仓库里增加一个your_github_id.github.com，比如我的github ID是hugozhu，相应的仓库名就是&lt;a href="https://github.com/hugozhu/hugozhu.github.com">hugozhu.github.com&lt;/a>，这个仓库也就是网站的根目录了，在这里放生成好的静态文件&lt;/li>
&lt;li>如果你需要用自己的域名，而不是Github提供的，可以在根目录下增加一个&lt;a href="https://github.com/hugozhu/hugozhu.github.com/blob/master/CNAME">CNAME&lt;/a>文件,文件内容则是你的域名，在DnsPod上需要建一个CNAME记录，将你的域名指向your_github_id.github.com. 也就是github原来分配给你的，完成这个设置后，访问your_github_id.github.com会跳转到你的域名；&lt;/li>
&lt;li>每次更新后，Github会在10分钟内生效。&lt;/li>
&lt;/ol>
&lt;h2 id="更新博客">更新博客&lt;/h2>
&lt;ol>
&lt;li>Gor的使用详细说明可见 &lt;a href="https://github.com/wendal/gor">https://github.com/wendal/gor&lt;/a>&lt;/li>
&lt;li>我的整个网站的内容也通过Github开源了: &lt;a href="https://github.com/hugozhu/blog">https://github.com/hugozhu/blog&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>以我的网站为例：&lt;/p>
&lt;pre>&lt;code>git clone https://github.com/hugozhu/blog
 Cloning into 'blog'...
 remote: Counting objects: 190, done.
 remote: Compressing objects: 100% (146/146), done.
 remote: Total 190 (delta 81), reused 132 (delta 23)
 Receiving objects: 100% (190/190), 155.48 KiB | 171 KiB/s, done.
 Resolving deltas: 100% (81/81), done.
cd blog
gor compile
 2013/02/27 13:17:19 gor.go:21: gor ver 2.1
 2013/02/27 13:17:19 payload.go:572: Load Layout : default
 2013/02/27 13:17:19 payload.go:572: Load Layout : page
 2013/02/27 13:17:19 payload.go:572: Load Layout : post
 2013/02/27 13:17:19 config.go:61: Look lile a Json, try it
 2013/02/27 13:17:19 config.go:64: It is Json Map
 2013/02/27 13:17:19 widgets.go:111: Load widget from widgets/analytics/config.yml
 2013/02/27 13:17:19 widgets.go:111: Load widget from widgets/comments/config.yml
 2013/02/27 13:17:19 widgets.go:111: Load widget from widgets/google_prettify/config.yml
 2013/02/27 13:17:19 compile.go:125: Done
cd compiled
git init
git add -A 
git commit -m &amp;quot;update website&amp;quot; .
git remote add origin hugozhu@github.com:hugozhu/hugozhu.github.com
git push -u origin master
&lt;/code>&lt;/pre>
&lt;p>最后等待10分钟，再打开 &lt;a href="http://hugozhu.github.com">http://hugozhu.github.com&lt;/a> 就好了。。。&lt;/p></description></item></channel></rss>