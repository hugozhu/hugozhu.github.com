<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bluetooth on All about Raspberry Pi</title><link>https://blog.hugozhu.site/tags/bluetooth/</link><description>Recent content in Bluetooth on All about Raspberry Pi</description><generator>Hugo</generator><language>en</language><managingEditor>hugozhu@gmail.com (Hugo Zhu)</managingEditor><webMaster>hugozhu@gmail.com (Hugo Zhu)</webMaster><lastBuildDate>Tue, 19 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.hugozhu.site/tags/bluetooth/index.xml" rel="self" type="application/rss+xml"/><item><title>树莓派3变身iBeacon发射器</title><link>https://blog.hugozhu.site/post/2016/63-raspberrypi-as-ibeacon-transmitter/</link><pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate><author>hugozhu@gmail.com (Hugo Zhu)</author><guid>https://blog.hugozhu.site/post/2016/63-raspberrypi-as-ibeacon-transmitter/</guid><description>iBeacon是apple公司提出的“一种可以让附近手持电子设备检测到的一种新的低功耗、低成本信号传送器”的一套可用于室内定位系统的协议。iBeacon技术通过低功耗蓝牙（BLE），也就是我们所说的智能蓝牙来实现。
设置 树莓派3内置了蓝牙芯片，最新的Raspian也已经安装好bluez，所以基本上不用什么设置，就可以把树莓派3当做iBeacon基站来使用了。
通过以下命令可以确认蓝牙芯片工作正常
hugo@raspberrypi3:~ $ sudo hciconfig hci0:	Type: BR/EDR Bus: UART BD Address: B8:27:EB:BF:E0:C5 ACL MTU: 1021:8 SCO MTU: 64:1 UP RUNNING RX bytes:3841 acl:0 sco:0 events:239 errors:0 TX bytes:5213 acl:0 sco:0 commands:237 errors:0 脚本 iBeacon使用的是BLE技术，具体而言，利用的是BLE中名为“通告帧”（Advertising）的广播帧。通告帧是定期发送的帧，只要是支持BLE的设备就可以接收到。iBeacon通过在这种通告帧的有效负载部分嵌入苹果自主格式的数据来实现。 iBeacon的数据主要由四种资讯构成，分别是UUID（通用唯一标识符）、Major、Minor、Measured Power。 UUID是规定为ISO/IEC11578:1996标准的128位标识符。 Major和Minor由iBeacon发布者自行设定，都是16位的标识符。比如，连锁店可以在Major中写入区域资讯，可在Minor中写入个别店铺的ID等。另外，在家电中嵌入iBeacon功能时，可以用Major表示产品型号，用Minor表示错误代码，用来向外部通知故障。 Measured Power是iBeacon模块与接收器之间相距1m时的参考接收信号强（RSSI：Received Signal Strength Indicator）。接收器根据该参考RSSI与接收信号的强度来推算发送模块与接收器的距离。
iBeacon发射的信号格式如下：
消息头 1E 02 # Number of bytes that follow in first AD structure 01 # Flags AD type 1A # Flags value 0x1A = 000011010 bit 0 (OFF) LE Limited Discoverable Mode bit 1 (ON) LE General Discoverable Mode bit 2 (OFF) BR/EDR Not Supported bit 3 (ON) Simultaneous LE and BR/EDR to Same Device Capable (controller) bit 4 (ON) Simultaneous LE and BR/EDR to Same Device Capable (Host) 1A # Number of bytes that follow in second (and last) AD structure Vendor的标识 FF # Manufacturer specific data AD type 4C 00 # Company identifier code (0x004C == Apple) 02 # Byte 0 of iBeacon advertisement indicator 15 # Byte 1 of iBeacon advertisement indicator 通告帧信息 F6 BC 15 E0 93 90 46 67 9B E1 86 6E C8 A1 99 DC # our iBeacon proximity uuid 00 00 # Major 00 00 # Minor C8 00 # Calibrated Tx power 以下脚本会随机生成一个UUID和相应的iBeacon发射命令</description></item></channel></rss>