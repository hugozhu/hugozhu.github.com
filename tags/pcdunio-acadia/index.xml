<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PcDunio Acadia on All about Raspberry Pi</title><link>/tags/pcdunio-acadia/</link><description>Recent content in PcDunio Acadia on All about Raspberry Pi</description><generator>Hugo</generator><language>en</language><managingEditor>hugozhu@gmail.com (Hugo Zhu)</managingEditor><webMaster>hugozhu@gmail.com (Hugo Zhu)</webMaster><lastBuildDate>Sun, 15 Mar 2015 00:00:00 +0000</lastBuildDate><atom:link href="/tags/pcdunio-acadia/index.xml" rel="self" type="application/rss+xml"/><item><title>自己搭建Airplay高清音乐播放系统</title><link>/post/2015/58-diy-airplay-hifi-audio-system/</link><pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate><author>hugozhu@gmail.com (Hugo Zhu)</author><guid>/post/2015/58-diy-airplay-hifi-audio-system/</guid><description>先看一下在iPhone 6 plus上用虾米播放高音质音乐的效果：
苹果的Airplay协议是通过基于RSTP（Real Time Streaming Protocol）协议通过UDP传输的无损编码音频流(Apple Lossless codec，音频流本身经过了AES加密，私钥是不公开的，这样只有苹果和其合作伙伴才能使用这个协议。但是2004年有人通过逆向工程获得了私钥并将其公开，这样我们也可以自己搭建低成本高音质的基于Airplay的音乐系统。在iPhone成为街机的时代，每个人的手机里有很多喜欢的音乐，如果在家里可以通过无线网络在音响系统里播放会方便很多。
硬件 pcDunio Acadia 或 Raspberry Pi 一只 3.5mm音频线一根，类似这种 有源音箱一对 网线一根或USB无线网卡一只 音频芯片 好的音质需要好的音源，无损音乐加好的前端输出是必不可少的。 pcDuino Acadia集成的音频芯片是业界领先的英国Wolfson（欧胜微电子）为高清音频设计的WM8962 。树莓派集成的音频芯片则是由美国Broadcom（博通）封装在主芯片BCM2835里通过PWM (pulse-width modulation) 提供的，比较简单音质一般，达不到高清音频的要求。
下面是树莓派音频口播放1kHz正弦信号的输出波形，可以看出来波形并不好。 正是因为板载音频质量差强人意，Wolfson也专为树莓派设计了基于WM5102 codec芯片的Wolfson Audio Card （售价高达$34.95，性价比不高，这块芯片也用在了魅族MX3上）。 更好的方案是使用USB声卡，如淘宝上可以购买的基于德州仪器的PCM2704的USB声卡，40多人民币。
综上，如果想DIY自己的高清音乐播放系统，只有树莓派还是不够的，可以考虑用pcDunio Acadia或额外购买USB DAC。
声音测试和调节 声音测试 首先需要用音频线把板子和有源音箱连接起来，如果线材或音箱质量不够好，会立刻听到背景噪音，实测树莓派的背景噪音比pcDuino Acadia要大一些。
注：普通用户不一定有权限使用系统音频设备，所以以下测试需要root或audio group里的用户。
首先可以用speaker-test命令测试是否能出声。
hugo@raspberrypi2 ~ $ sudo speaker-test speaker-test 1.0.25 Playback device is default Stream parameters are 48000Hz, S16_LE, 1 channels Using 16 octaves of pink noise Rate set to 48000Hz (requested 48000Hz) Buffer size range from 512 to 32768 Period size range from 512 to 32768 Using max buffer size 32768 Periods = 4 was set period_size = 8192 was set buffer_size = 32768 0 - Front Left Time per period = 2.</description></item></channel></rss>